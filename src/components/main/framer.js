import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';

const Framer = () => {
  const [shouldAnimate, setShouldAnimate] = useState(false);

  useEffect(() => {
    // Trigger the animation after a short delay (you can adjust the delay to your liking)
    const animationTimeout = setTimeout(() => {
      setShouldAnimate(true);
    }, 500);

    return () => clearTimeout(animationTimeout);
  }, []);

  return (
    <motion.div>
      <motion.svg width="557" height="271" viewBox="0 0 557 271" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="557" height="271" fill="white" />
        <motion.path
          d="M86 152C109.292 127.877 130.549 101.836 152.556 76.5556C161.731 66.0156 170.715 54.6334 181.333 45.4444C181.901 44.9531 184.883 41.449 185 43.4444C185.214 47.0824 185 50.8008 185 54.4444C185 100.402 193.396 145.697 197.222 191.333C198.729 209.306 202 227.127 202 245.278C202 250.255 202.469 255.743 197.667 258.944C189.605 264.319 176.676 264.9 171.167 256C165.311 246.541 171.34 236.136 177.444 228.611C185.127 219.142 191.092 210.909 202.667 205.778C209.442 202.774 216.729 204.523 223 201.222C229.354 197.878 226.933 182.038 226.556 176.556C226.005 168.561 226.386 156.616 222.778 149C222.237 147.858 219 142.57 219 146.556C219 153.374 221.888 160.479 224.222 166.722C227.583 175.709 230.871 184.908 234.5 193.778C235.726 196.774 238.339 197.901 241 196C251.052 188.82 250.813 170.196 252.389 159.444C253.832 149.597 256.186 139.491 255 130C254.791 128.326 255.482 139.138 256.444 141.778C258.284 146.823 263.542 155.808 268.778 158C271.629 159.194 275.902 159.606 278.889 158.556C282.863 157.157 286.456 154.782 288.778 151.222C297.802 137.386 302.705 120.296 307.611 104.778C311.22 93.3621 314.576 81.7841 316.778 70C316.982 68.9079 318.235 64.2162 317.278 62.8333C316.304 61.4267 313.168 63.1908 312.444 64.1111C307.79 70.0352 310.24 78.8428 312.722 85.2778C318.436 100.092 328.155 112.226 335.444 126.111C338.576 132.076 342.193 140.059 342 147C341.746 156.155 321.63 150.216 322 140.222C322.132 136.654 326.006 133.745 328.778 132C333.527 129.01 336.113 125.328 337.944 119.833C341.164 110.175 341.733 99.3318 342.389 89.2778C342.986 80.1166 343.779 70.3705 342.444 61.2222C341.528 54.939 339.575 45.3906 334.778 40.7778C326.323 32.6487 334.416 69.4681 334.556 70.1111C338.308 87.3629 343.623 104.05 348.778 120.889C350.614 126.887 352.42 133.541 352.944 139.833C353.003 140.538 353.681 149.473 354.444 148.056C357.011 143.29 354.797 133.984 355.111 128.722C355.375 124.296 356.471 119.941 357.056 115.556C358.734 102.964 372.875 120.078 376.778 122.333C386.95 128.211 395.763 120.782 403 113.333C411.085 105.012 421 94.9755 421 82.7778C421 79.6624 422.284 71.8246 419 70C413.182 66.7675 406.087 72.0946 403.056 76.9444C399.19 83.1293 393.743 95.2114 403.056 100.333C406.803 102.394 412.773 102 417 102C419.867 102 423.039 97.8671 420 95.7778C416.956 93.6853 416 85.4444 416 85.4444C416 85.4444 416.397 91.0944 417.222 93.7778C418.066 96.5194 420.709 98.0098 422.5 100C428.617 106.797 437.207 98.6005 440.944 94C447.456 85.9861 451 75.8779 451 65.5556C451 56.5447 440.937 55.8123 435.444 61C432.745 63.5493 433.494 62.3169 436.778 61.2222C440.913 59.8437 444.937 58.1356 449 56.5556C454.105 54.5703 469.711 49.4397 464.444 50.9444C461.369 51.8232 459.616 57.6205 458.556 60.5C456.033 67.3473 455.142 76.0202 456.222 83.2222C456.898 87.7303 459.735 91.9167 463 95C465.221 97.0981 470.657 96 473.556 96C477.852 96 481.715 95.7689 484.5 92.0556C485.444 90.7973 488.605 87.6051 488 87"
          stroke="black"
          stroke-width="3"
          stroke-linecap="round"
          // Set pathLength to 0, so the path is initially hidden
          initial={{ pathLength: 0 }}
          // Animate pathLength to 1, so the path appears to be drawn
          animate={{ pathLength: shouldAnimate ? 1 : 0 }}
        />
      </motion.svg>

    </motion.div>
  );
};

export default Framer;
